import sqlite3
import os.path


class SqliteDatabase:

    def __init__(self):
        if os.path.isfile('./pen_test_tool_db.db'):
            self.sqlite_connection = sqlite3.connect('pen_test_tool_db.db', check_same_thread=False)
            self.cursor = self.sqlite_connection.cursor()
        else:
            self.sqlite_connection = sqlite3.connect('pen_test_tool_db.db')
            self.cursor = self.sqlite_connection.cursor()

            sqlite_select_query = "CREATE TABLE users (username TEXT, password TEXT, website TEXT, is_admin INTEGER);"
            self.cursor.execute(sqlite_select_query)

            sqlite_select_query =\
                "INSERT INTO users (USERNAME, PASSWORD, WEBSITE, IS_ADMIN) VALUES('admin', 'admin', 'None', 1);"
            self.cursor.execute(sqlite_select_query)
            self.sqlite_connection.commit()

    def is_user_exist(self, username):
        self.cursor.execute('SELECT COUNT(*) FROM USERS WHERE USERNAME = "%s";' % username)
        return bool(self.cursor.fetchall()[0][0])

    def is_password_match(self, username, password):
        self.cursor.execute('SELECT COUNT(*) FROM USERS WHERE USERNAME = "%s" AND PASSWORD = "%s"' %
                            (username, password))
        self.sqlite_connection.commit()
        return bool(self.cursor.fetchall()[0][0])

    def add_user(self, username, password, website):
        self.cursor.execute('INSERT INTO USERS (USERNAME, PASSWORD, WEBSITE, IS_ADMIN) VALUES("%s", "%s", "%s", 0);' %
                            (username, password, website))

    def check_if_user_is_admin(self, username):
        self.cursor.execute('SELECT * FROM USERS WHERE USERNAME = "%s"' % username)
        return bool(self.cursor.fetchall()[0][3])
